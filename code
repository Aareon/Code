#!/usr/bin/env python
"""
Code Copyright (C) 2012-2014 Liam Stanley - http://liamstanley.io
Source: https://github.com/Liamraystanley/Code
Documentation: https://www.liamstanley.io/Code.git
"""

import sys
import os
import re
import json
import optparse
from core.run import run
from util import output

dotdir = os.path.expanduser('~/.code')
configv = 7


def start():
    symbol = '*'
    lines = __doc__.strip().split('\n')
    largest = 0
    for line in lines:
        if len(line) > largest:
            largest = len(line)
    outer = (largest + (1 * 4)) * symbol
    output.normal(outer, False)
    for line in lines:
        tmp = symbol + (1 * ' ') + line
        sidedif = (largest + (1 * 4)) - len(tmp) - 1
        tmp += ' ' * sidedif + symbol
        output.normal(tmp, False)
    output.normal(outer, False)
    output.normal('Initializing the bot', 'START')


def parse_json(filename):
    """ remove //-- and /* -- */ style comments from JSON """
    comment_re = re.compile(
        '(^)?[^\S\n]*/(?:\*(.*?)\*/[^\S\n]*|/[^\n]*)($)?',
        re.DOTALL | re.MULTILINE
    )
    with open(filename) as f:
        content = f.read()
        match = comment_re.search(content)
        while match:
            content = content[:match.start()] + content[match.end():]
            match = comment_re.search(content)

        return json.loads(content)


def main(argv=None):
    # 1: Parse The Command Line

    parser = optparse.OptionParser('%prog [options]')
    parser.add_option(
        '-c', '--config', metavar='fn',
        help='use this configuration file or directory'
    )
    opts, args = parser.parse_args(argv)

    # 2: Documentation output
    start()

    # 3: Require python 2.7 or later
    if sys.version_info < (2, 7):
        output.error('Requires Python 2.7 or later, from www.python.org')
        sys.exit(1)

    # 4. Create ~/.code if not made already
    if not os.path.isdir(dotdir):
        if not os.path.isdir(dotdir):
            try:
                output.info('Creating creating database directory in ~/.code...')
                os.mkdir(dotdir)
            except Exception, e:
                output.error('There was a problem creating %s:' % dotdir)
                output.error(str(e))
                output.error('Please fix this and then run code again.')
                sys.exit(1)

    # 5: Load The Configuration
    bot_config = opts.config or 'config.json'

    # and check if exists
    if not os.path.isfile(bot_config):
        output.error(
            'Configuration file "%s" does not exist. Please copy '
            'the example.json to config.json then run Code again' % bot_config)

    try:
        config = parse_json(bot_config)
    except:
        output.error(
            'The config file has syntax errors. Please fix them and run Code again!'
        )
        sys.exit(1)
    config['filename'] = bot_config

    defaults = {
        'website': 'https://www.liamstanley.io/Code.git',
        'name': '\x0307Code -- Python IRC Bot',
        'user': 'code',
        'port': 6667,
        'server_password': None
    }

    for key, value in defaults.iteritems():
        if key not in config:
            config[key] = value
            continue
        if not config[key]:
            config[key] = value

    if config['host'] == 'irc.example.net':
        error = (
            'You must edit the config file first!\n'
            'You\'re currently using %s' % config.filename
        )
        output.error(error)
        sys.exit(1)

    # 6: Initialise And Run The codeeees

    # @@ ignore SIGHUP
    run(config)  # @@ thread this

if __name__ == '__main__':
    main()
